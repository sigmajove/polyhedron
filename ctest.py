import svg_writer
import math

points = [
    (-10.0000000000000, -0.0000000000000),
    (-9.9802672842827, -0.6279051952931),
    (-9.9802672842827, 0.6279051952931),
    (-9.9211470131448, 1.2533323356430),
    (-9.9211470131448, -1.2533323356430),
    (-9.8228725072869, -1.8738131458572),
    (-9.8228725072869, 1.8738131458572),
    (-9.6858316112863, -2.4868988716485),
    (-9.6858316112863, 2.4868988716485),
    (-9.5105651629515, 3.0901699437495),
    (-9.5105651629515, -3.0901699437495),
    (-9.2977648588825, 3.6812455268468),
    (-9.2977648588825, -3.6812455268468),
    (-9.0482705246602, -4.2577929156507),
    (-9.0482705246602, 4.2577929156507),
    (-8.7630668004386, -4.8175367410172),
    (-8.7630668004386, 4.8175367410172),
    (-8.4432792550202, -5.3582679497900),
    (-8.4432792550201, 5.3582679497900),
    (-8.0901699437495, 5.8778525229247),
    (-8.0901699437495, -5.8778525229247),
    (-7.7051324277579, 6.3742398974869),
    (-7.7051324277579, -6.3742398974869),
    (-7.5000000000000, 0.0000000000000),
    (-7.2896862742141, 6.8454710592869),
    (-7.2896862742141, -6.8454710592869),
    (-7.1329238722137, -2.3176274578121),
    (-7.1329238722137, 2.3176274578121),
    (-6.8454710592869, 7.2896862742141),
    (-6.8454710592869, -7.2896862742141),
    (-6.3742398974869, -7.7051324277579),
    (-6.3742398974869, 7.7051324277579),
    (-6.0676274578121, -4.4083893921935),
    (-6.0676274578121, 4.4083893921935),
    (-6.0000000000000, -0.0000000000000),
    (-5.9842294026290, 0.2506664671286),
    (-5.9842294026290, -0.2506664671286),
    (-5.9371663222573, -0.4973797743297),
    (-5.9371663222573, 0.4973797743297),
    (-5.8778525229247, 8.0901699437495),
    (-5.8778525229247, -8.0901699437495),
    (-5.8595529717765, -0.7362491053694),
    (-5.8595529717765, 0.7362491053694),
    (-5.7526133600877, -0.9635073482034),
    (-5.7526133600877, 0.9635073482034),
    (-5.6180339887499, 1.1755705045849),
    (-5.6180339887499, -1.1755705045849),
    (-5.4579372548428, 1.3690942118574),
    (-5.4579372548428, -1.3690942118574),
    (-5.3582679497900, 8.4432792550201),
    (-5.3582679497900, -8.4432792550202),
    (-5.2748479794974, -1.5410264855516),
    (-5.2748479794974, 1.5410264855516),
    (-5.0716535899580, -1.6886558510040),
    (-5.0716535899580, 1.6886558510040),
    (-4.8515585831301, -1.8096541049320),
    (-4.8515585831301, 1.8096541049320),
    (-4.8175367410172, 8.7630668004386),
    (-4.8175367410172, -8.7630668004386),
    (-4.6180339887499, 1.9021130325903),
    (-4.6180339887499, -1.9021130325903),
    (-4.4083893921935, -6.0676274578121),
    (-4.4083893921935, 6.0676274578121),
    (-4.3747626291714, -1.9645745014574),
    (-4.3747626291714, 1.9645745014574),
    (-4.2577929156507, 9.0482705246602),
    (-4.2577929156507, -9.0482705246602),
    (-4.1255810390586, -1.9960534568565),
    (-4.1255810390586, 1.9960534568565),
    (-3.8744189609414, 1.9960534568565),
    (-3.8744189609414, -1.9960534568565),
    (-3.6812455268468, -9.2977648588825),
    (-3.6812455268468, 9.2977648588825),
    (-3.6252373708286, 1.9645745014574),
    (-3.6252373708286, -1.9645745014574),
    (-3.3819660112501, 1.9021130325903),
    (-3.3819660112501, -1.9021130325903),
    (-3.1484414168699, 1.8096541049320),
    (-3.1484414168699, -1.8096541049320),
    (-3.0901699437495, 9.5105651629515),
    (-3.0901699437495, -9.5105651629515),
    (-2.9283464100420, -1.6886558510040),
    (-2.9283464100420, 1.6886558510040),
    (-2.7251520205026, 1.5410264855516),
    (-2.7251520205026, -1.5410264855516),
    (-2.5420627451572, 1.3690942118574),
    (-2.5420627451572, -1.3690942118574),
    (-2.4868988716486, 9.6858316112863),
    (-2.4868988716485, -9.6858316112863),
    (-2.3819660112501, -1.1755705045849),
    (-2.3819660112501, 1.1755705045849),
    (-2.3176274578121, -7.1329238722137),
    (-2.3176274578121, 7.1329238722137),
    (-2.2473866399123, 0.9635073482034),
    (-2.2473866399123, -0.9635073482034),
    (-2.1404470282235, -0.7362491053694),
    (-2.1404470282235, 0.7362491053694),
    (-2.0628336777427, -0.4973797743297),
    (-2.0628336777427, 0.4973797743297),
    (-2.0157705973710, 0.2506664671286),
    (-2.0157705973710, -0.2506664671286),
    (-2.0000000000000, 0.0000000000000),
    (-1.8738131458572, -9.8228725072869),
    (-1.8738131458572, 9.8228725072869),
    (-1.2533323356430, 9.9211470131448),
    (-1.2533323356430, -9.9211470131448),
    (-0.6279051952931, -9.9802672842827),
    (-0.6279051952931, 9.9802672842827),
    (-0.4802867532862, 0.3133330839108),
    (-0.3244412147206, -0.9203113817117),
    (-0.0225424859374, 1.4694631307312),
    (-0.0000000000000, -7.5000000000000),
    (0.0000000000000, 0.0000000000000),
    (0.0000000000000, 10.0000000000000),
    (0.0000000000000, 7.5000000000000),
    (0.0000000000000, -10.0000000000000),
    (0.0157705973710, -0.2506664671286),
    (0.0157705973710, 0.2506664671286),
    (0.0628336777427, -0.4973797743297),
    (0.0628336777427, 0.4973797743297),
    (0.1404470282235, -0.7362491053694),
    (0.1404470282235, 0.7362491053694),
    (0.2473866399123, -0.9635073482034),
    (0.2473866399123, 0.9635073482034),
    (0.3819660112501, -1.1755705045849),
    (0.3819660112501, 1.1755705045849),
    (0.4064400256283, -1.9262831069395),
    (0.5420627451572, -1.3690942118574),
    (0.5420627451572, 1.3690942118574),
    (0.6279051952931, 9.9802672842827),
    (0.6279051952931, -9.9802672842827),
    (0.7251520205026, 1.5410264855516),
    (0.7251520205026, -1.5410264855516),
    (0.9283464100420, 1.6886558510040),
    (0.9283464100420, -1.6886558510040),
    (0.9355517710873, 2.2620676311650),
    (1.1484414168699, 1.8096541049320),
    (1.1484414168699, -1.8096541049320),
    (1.2533323356430, 9.9211470131448),
    (1.2533323356430, -9.9211470131448),
    (1.3819660112501, -1.9021130325903),
    (1.3819660112501, 1.9021130325903),
    (1.5315467135357, -2.4557181268217),
    (1.6252373708286, -1.9645745014574),
    (1.6252373708286, 1.9645745014574),
    (1.8738131458572, -9.8228725072869),
    (1.8738131458572, 9.8228725072869),
    (1.8744189609414, 1.9960534568565),
    (1.8744189609414, -1.9960534568565),
    (2.1255810390586, -1.9960534568565),
    (2.1255810390586, 1.9960534568565),
    (2.1569762988233, 2.4950668210707),
    (2.3176274578121, -7.1329238722137),
    (2.3176274578121, 7.1329238722137),
    (2.3747626291714, -1.9645745014574),
    (2.3747626291714, 1.9645745014574),
    (2.4868988716485, 9.6858316112863),
    (2.4868988716486, -9.6858316112863),
    (2.6180339887499, -1.9021130325903),
    (2.6180339887499, 1.9021130325903),
    (2.7725424859374, -2.3776412907379),
    (2.8515585831301, -1.8096541049320),
    (2.8515585831301, 1.8096541049320),
    (3.0716535899580, 1.6886558510040),
    (3.0716535899580, -1.6886558510040),
    (3.0901699437495, 9.5105651629515),
    (3.0901699437495, -9.5105651629515),
    (3.2748479794974, -1.5410264855516),
    (3.2748479794974, 1.5410264855516),
    (3.3395669874475, 2.1108198137550),
    (3.4579372548428, -1.3690942118574),
    (3.4579372548428, 1.3690942118574),
    (3.6180339887499, -1.1755705045849),
    (3.6180339887499, 1.1755705045849),
    (3.6812455268468, 9.2977648588825),
    (3.6812455268468, -9.2977648588825),
    (3.7526133600877, -0.9635073482034),
    (3.7526133600877, 0.9635073482034),
    (3.8224215685535, -1.7113677648217),
    (3.8595529717765, -0.7362491053694),
    (3.8595529717765, 0.7362491053694),
    (3.9371663222573, -0.4973797743297),
    (3.9371663222573, 0.4973797743297),
    (3.9842294026290, -0.2506664671286),
    (3.9842294026290, 0.2506664671286),
    (4.0000000000000, 0.0000000000000),
    (4.1907667001097, 1.2043841852543),
    (4.2577929156507, 9.0482705246602),
    (4.2577929156507, -9.0482705246602),
    (4.4083893921935, -6.0676274578121),
    (4.4083893921935, 6.0676274578121),
    (4.4214579028216, -0.6217247179121),
    (4.5000000000000, 0.0000000000000),
    (4.8175367410172, -8.7630668004386),
    (4.8175367410172, 8.7630668004386),
    (5.3582679497900, 8.4432792550202),
    (5.3582679497900, -8.4432792550201),
    (5.8778525229247, 8.0901699437495),
    (5.8778525229247, -8.0901699437495),
    (6.0676274578121, -4.4083893921936),
    (6.0676274578121, 4.4083893921935),
    (6.3742398974869, 7.7051324277579),
    (6.3742398974869, -7.7051324277579),
    (6.8454710592869, 7.2896862742141),
    (6.8454710592869, -7.2896862742141),
    (7.1329238722137, -2.3176274578121),
    (7.1329238722137, 2.3176274578121),
    (7.2896862742141, -6.8454710592869),
    (7.2896862742141, 6.8454710592869),
    (7.5000000000000, 0.0000000000000),
    (7.7051324277579, -6.3742398974869),
    (7.7051324277579, 6.3742398974869),
    (8.0901699437495, 5.8778525229247),
    (8.0901699437495, -5.8778525229247),
    (8.4432792550201, -5.3582679497900),
    (8.4432792550202, 5.3582679497900),
    (8.7630668004386, -4.8175367410172),
    (8.7630668004386, 4.8175367410172),
    (9.0482705246602, -4.2577929156507),
    (9.0482705246602, 4.2577929156507),
    (9.2977648588825, 3.6812455268468),
    (9.2977648588825, -3.6812455268468),
    (9.5105651629515, 3.0901699437495),
    (9.5105651629515, -3.0901699437495),
    (9.6858316112863, -2.4868988716485),
    (9.6858316112863, 2.4868988716485),
    (9.8228725072869, -1.8738131458572),
    (9.8228725072869, 1.8738131458572),
    (9.9211470131448, 1.2533323356430),
    (9.9211470131448, -1.2533323356430),
    (9.9802672842827, -0.6279051952931),
    (9.9802672842827, 0.6279051952931),
    (10.0000000000000, 0.0000000000000),
]

triangles = [
    (2, 0, 23),
    (3, 2, 23),
    (6, 3, 23),
    (6, 23, 27),
    (8, 6, 27),
    (9, 8, 27),
    (11, 9, 27),
    (14, 11, 27),
    (16, 14, 27),
    (33, 16, 27),
    (18, 16, 33),
    (19, 18, 33),
    (21, 19, 33),
    (24, 21, 33),
    (33, 28, 24),
    (62, 28, 33),
    (31, 28, 62),
    (39, 31, 62),
    (49, 39, 62),
    (57, 49, 62),
    (62, 65, 57),
    (92, 65, 62),
    (72, 65, 92),
    (79, 72, 92),
    (87, 79, 92),
    (103, 87, 92),
    (92, 104, 103),
    (114, 104, 92),
    (104, 114, 107),
    (107, 114, 113),
    (129, 113, 114),
    (138, 129, 114),
    (146, 138, 114),
    (146, 114, 153),
    (146, 153, 156),
    (156, 153, 165),
    (174, 165, 153),
    (190, 174, 153),
    (187, 174, 190),
    (187, 190, 194),
    (194, 190, 195),
    (195, 190, 197),
    (197, 190, 201),
    (201, 190, 203),
    (200, 203, 190),
    (208, 203, 200),
    (211, 208, 200),
    (211, 200, 212),
    (212, 200, 215),
    (215, 200, 217),
    (217, 200, 206),
    (219, 217, 206),
    (219, 206, 220),
    (220, 206, 222),
    (222, 206, 225),
    (225, 206, 227),
    (227, 206, 228),
    (228, 206, 209),
    (228, 209, 231),
    (231, 209, 232),
    (209, 230, 232),
    (209, 229, 230),
    (209, 226, 229),
    (226, 209, 205),
    (226, 205, 224),
    (205, 223, 224),
    (205, 221, 223),
    (205, 218, 221),
    (199, 218, 205),
    (218, 199, 216),
    (216, 199, 214),
    (199, 213, 214),
    (199, 210, 213),
    (199, 207, 210),
    (199, 204, 207),
    (204, 199, 189),
    (204, 189, 202),
    (189, 198, 202),
    (189, 196, 198),
    (189, 193, 196),
    (189, 188, 193),
    (189, 152, 188),
    (189, 160, 152),
    (199, 160, 189),
    (178, 160, 199),
    (178, 164, 160),
    (167, 164, 178),
    (170, 167, 178),
    (172, 170, 178),
    (176, 172, 178),
    (178, 191, 176),
    (205, 191, 178),
    (209, 191, 205),
    (209, 192, 191),
    (206, 192, 209),
    (186, 192, 206),
    (186, 182, 192),
    (180, 182, 186),
    (177, 180, 186),
    (186, 173, 177),
    (200, 173, 186),
    (173, 200, 190),
    (173, 190, 169),
    (169, 171, 173),
    (169, 168, 171),
    (163, 168, 169),
    (169, 162, 163),
    (162, 169, 159),
    (159, 169, 190),
    (151, 159, 190),
    (159, 151, 155),
    (151, 150, 155),
    (147, 150, 151),
    (147, 151, 144),
    (151, 135, 144),
    (153, 135, 151),
    (135, 153, 114),
    (114, 92, 135),
    (135, 92, 82),
    (82, 110, 135),
    (110, 82, 83),
    (110, 83, 85),
    (90, 110, 85),
    (110, 90, 93),
    (93, 96, 110),
    (110, 96, 108),
    (108, 121, 110),
    (121, 108, 119),
    (119, 108, 117),
    (117, 108, 112),
    (108, 116, 112),
    (109, 116, 108),
    (116, 109, 118),
    (118, 109, 120),
    (120, 109, 122),
    (124, 122, 109),
    (126, 124, 109),
    (127, 124, 126),
    (127, 126, 132),
    (132, 126, 134),
    (134, 126, 137),
    (142, 137, 126),
    (140, 137, 142),
    (143, 140, 142),
    (143, 142, 148),
    (149, 148, 142),
    (160, 149, 142),
    (154, 149, 160),
    (158, 154, 160),
    (158, 160, 161),
    (160, 164, 161),
    (160, 142, 152),
    (142, 111, 152),
    (111, 142, 126),
    (126, 91, 111),
    (126, 81, 91),
    (84, 81, 126),
    (86, 84, 126),
    (109, 86, 126),
    (109, 89, 86),
    (94, 89, 109),
    (95, 94, 109),
    (97, 95, 109),
    (100, 97, 109),
    (100, 109, 108),
    (108, 101, 100),
    (108, 99, 101),
    (98, 99, 108),
    (96, 98, 108),
    (91, 81, 78),
    (91, 78, 76),
    (74, 91, 76),
    (91, 74, 70),
    (91, 70, 61),
    (91, 61, 66),
    (91, 66, 71),
    (71, 80, 91),
    (80, 88, 91),
    (91, 88, 102),
    (91, 102, 111),
    (102, 105, 111),
    (105, 106, 111),
    (111, 106, 115),
    (111, 115, 130),
    (130, 139, 111),
    (139, 152, 111),
    (152, 139, 145),
    (152, 145, 157),
    (152, 157, 166),
    (152, 166, 175),
    (152, 175, 188),
    (61, 58, 66),
    (50, 58, 61),
    (40, 50, 61),
    (30, 40, 61),
    (61, 29, 30),
    (61, 25, 29),
    (32, 25, 61),
    (22, 25, 32),
    (20, 22, 32),
    (17, 20, 32),
    (32, 15, 17),
    (26, 15, 32),
    (13, 15, 26),
    (12, 13, 26),
    (10, 12, 26),
    (7, 10, 26),
    (26, 5, 7),
    (26, 4, 5),
    (23, 4, 26),
    (1, 4, 23),
    (0, 1, 23),
    (41, 23, 26),
    (41, 37, 23),
    (37, 36, 23),
    (34, 23, 36),
    (35, 23, 34),
    (38, 23, 35),
    (42, 23, 38),
    (27, 23, 42),
    (27, 42, 44),
    (27, 44, 45),
    (47, 27, 45),
    (52, 27, 47),
    (54, 27, 52),
    (33, 27, 54),
    (33, 54, 56),
    (33, 56, 59),
    (64, 33, 59),
    (68, 33, 64),
    (68, 62, 33),
    (62, 68, 69),
    (62, 69, 73),
    (62, 73, 75),
    (62, 75, 77),
    (92, 62, 77),
    (77, 82, 92),
    (41, 26, 43),
    (43, 26, 46),
    (46, 26, 48),
    (48, 26, 51),
    (51, 26, 53),
    (53, 26, 32),
    (55, 53, 32),
    (60, 55, 32),
    (63, 60, 32),
    (67, 63, 32),
    (32, 61, 67),
    (70, 67, 61),
    (110, 121, 123),
    (110, 123, 125),
    (128, 110, 125),
    (131, 110, 128),
    (131, 135, 110),
    (133, 135, 131),
    (135, 133, 136),
    (135, 136, 141),
    (135, 141, 144),
    (190, 153, 151),
    (200, 186, 206),
    (192, 182, 184),
    (192, 184, 185),
    (192, 185, 183),
    (192, 183, 191),
    (183, 181, 191),
    (181, 179, 191),
    (179, 176, 191),
    (199, 205, 178),
]


def dist(a, b):
    return math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2)


def circle_through_points(p1, p2, p3):
    x1, y1 = p1
    x2, y2 = p2
    x3, y3 = p3

    # Calculate squared distances
    s1 = x1**2 + y1**2
    s2 = x2**2 + y2**2
    s3 = x3**2 + y3**2

    # Calculate determinants
    M11 = x1 * y2 + x2 * y3 + x3 * y1 - (x2 * y1 + x3 * y2 + x1 * y3)
    M12 = s1 * y2 + s2 * y3 + s3 * y1 - (s2 * y1 + s3 * y2 + s1 * y3)
    M13 = s1 * x2 + s2 * x3 + s3 * x1 - (s2 * x1 + s3 * x2 + s1 * x3)

    # Calculate center coordinates
    x0 = 0.5 * M12 / M11
    y0 = -0.5 * M13 / M11

    # Calculate radius
    r0 = dist((x0, y0), (x1, y1))

    return ((x0, y0), r0)


def CheckTriangle(i):
    t = triangles[i]
    center, r = circle_through_points(points[t[0]], points[t[1]], points[t[2]])
    result = None
    inside = []
    for j in range(len(points)):
        if j not in t:
            if dist(points[j], center) <= r - 1e-4:
                inside.append(points[j])
                print("violation:")
                print("triangle ", t)
                print("point", j)
    return None if len(inside) == 0 else (center, r, inside)


def main():
    with svg_writer.SVGWriter("cdt_ctest", 1, 0.01) as ctx:
        vnum = 0
        for i, t in enumerate(triangles):
            circle = CheckTriangle(i)
            if circle is not None:
                vnum += 1
                if vnum == 7:
                    ctx.save()
                    ctx.set_source_rgb(1.0, 0, 0)
                    ctx.move_to(*points[t[0]])
                    ctx.line_to(*points[t[1]])
                    ctx.line_to(*points[t[2]])
                    ctx.close_path()
                    ctx.fill()

                    for p in circle[2]:
                        ctx.set_source_rgba(0, 1, 0, 0.5)
                        ctx.arc(*p, 0.2, 0, 2*math.pi)
                        ctx.fill()

                    ctx.set_source_rgb(211.8/255, 0, 1)
                    ctx.arc(*circle[0], circle[1], 0, 2 * math.pi)
                    ctx.stroke()

                    ctx.restore()
            ctx.move_to(*points[t[0]])
            ctx.line_to(*points[t[1]])
            ctx.line_to(*points[t[2]])
            ctx.close_path()
            ctx.stroke()
        print(f"{vnum} illegal triangles of {len(triangles)}")


main()
